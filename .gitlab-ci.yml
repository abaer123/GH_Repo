
image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  ROLLOUT_RESOURCE_TYPE: deployment
  # Variables for DAST scanning
  DAST_WEBSITE: $APP_URL
  DAST_FULL_SCAN_ENABLED: "true"
  DAST_BROWSER_SCAN: "true"
  # Fuzzing Variables
  FUZZAPI_PROFILE: Long-100
  FUZZAPI_OPENAPI: test_openapi.v2.0.json
  FUZZAPI_TARGET_URL: $APP_URL

# adding the test and dast & fuzz stages allow for the OOTB (out of the box) security scans to run
# edit for streaming audit event
# create change


stages:
  - .pre
  - build
 # - unit
  - test
  - cfuzz
  - review
  - staging
  - canary
  - production
  - dast
  - fuzz
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - cleanup

include:  
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  #- template: Security/DAST.latest.gitlab-ci.yml # ultimate
  # - template: Jobs/Deploy.gitlab-ci.yml 
  # - template: Security/Dependency-Scanning.gitlab-ci.yml # ultimate
  # - template: Coverage-Fuzzing.gitlab-ci.yml # ultimate
  # - template: API-Fuzzing.gitlab-ci.yml # ultimate


# Attempt to override Compliance job from Compliance Framework
# security_compliance_job:
#   stage: .pre 
#   rules:
#     - when: always
#   script: echo "Hello from me."


build:
  stage: build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE .
    - docker push $IMAGE

# unit:
#   image: python:3.6
#   stage: unit
#   script:
#     - apt update -y
#     - apt install libmariadb3 libmariadb-dev sqlite3 libsqlite3-dev -y
#     - pip install --upgrade pip
#     - pip3 install -r requirements.txt
#     - python -m unittest tests/test_db.py

# ensuring that our image is updated before running dependency scanning
# gemnasium-python-dependency_scanning:
#   before_script:
#     - apt update
#     - apt install libmariadb3 libmariadb-dev sqlite3 libsqlite3-dev -y

# adding fuzz job
# my_fuzz_target:
#   image: python:latest
#   variables:
#     COVFUZZ_PROJECT_PATH: $CI_PROJECT_URL
#   extends: .fuzz_base
#   stage: cfuzz
#   script:
#     - pip install --extra-index-url https://gitlab.com/api/v4/projects/19904939/packages/pypi/simple pythonfuzz
#     - ./gitlab-cov-fuzz run --engine pythonfuzz -- fuzz.py
